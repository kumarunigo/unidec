Procedure oriented programming : C programming
	focus on task/function
	
		flyRocket:
		
		
Object oriented programming : Java,	Dotnet,	Ruby
	focus on Data and functions around that data
Modular approach

	Rocket
		Has-A : FuelChamber, exhaution, lifesupport		
		Does-A
			fly			
			lifesupport
		
	BankAccount
	
		Has-A : (attributes or Data of the system) "VARIABLES"
			accountNumber=123,routing=11,address=ca,
			cusName=john,Money=100$,phone=456
			
		Does-A : (Actions associated with the system) "METHODS"
			withdraw = 10$
				deduct 10$ from Money100$ = 90$ (LOGIC) "OPERATOR & CONTROL FLOW"
			deposit = 25$
				add 25$ to Money100$ = 125$
			changePhone = 456
				update the new phone
			changeAddress = ca
				upadte the new address
			
	public class BankAccount{
		String name="john";
		int money=100;
		int phone=456;

		public void withdraw(int withdrawAmount){
			money=money-withdrawAmount;
		}

		public void deposit(int depositAmount){
			money=money+depositAmount;
		}
	}
		
		
		
	amazon
		has-a  product, customer, buyer,seller
		
		does-a
			login
			add2Cart
			shop
			checkout
		
		
	Rock
	
		has-a 
			color,weight,element
			
		does-a
			throw
			paperweight
			
	15 years R and D 		
	Iphone3 - 2006
		call
		text
		browse
		
	Reusability
	Iphone4 - 2007
		call
		text
		browse
		map
		
	===========================
	abstract class - abstraction
	
	GenericPyment
		name
		shipping address
		billing address
		contact email id
		contact phone
		
	
	PaymentCreditCard
		credit card
		
	CryptoCard
		cryptowallet
		
	Paypal
		paypal userid pwd
			
	Customer >>>>>>>> bank account >>>>>>>>>>>>> amazon	
	set												get
			
			
			

loginPage
	Login.java
	registeration.java
browsing
	shopping.java
	checkout.java


bankAccount {
	withdraw{
		deduct withdraw amount from balanace
	}
	deposit{
		add amount to balanace
	}
	checkBalance{
		display available balance
	}
}
loanapplication{
applyloan
check credit score
check salary
}





Simple Data - "PRIMITIVE DATA TYPE"
1) number : 
	byte ( 1 byte ) : -128 to +127 
	short (2 byte ) : -32k to + 32k
	int ( 4 byte ) : -2billion to + 2 billion
	long ( 8 byte) : trillions
2) decimal number
	float ( 4 bytes) : 6 decimal point accuracy
	double ( 8 bytes) : 
3) yes/no
	boolean 
4) 1 character : A-Z , 0-9, special character
	char
	
Complex Data - "OBJECT DATA TYPE"
1) group of characters
	firstname : john
	String 
2) sub information ;
	address : 123 , abcd street, city, state, 12345
	new program to be created


**************************

int a=30; 
	int = data type
	a   =  variable ( can change ) 
	30 = value

int b; // declaration line... declare variable named b is capable of storing numbered value
int c=20;  // initialization.... when value has been given/assigned to a variabel FIRST time 
c=30;      // re-assignment
 

float weight;
weight=123.1f;
weight=125.1f;


int age=123;
	int is a data type
	age is a variable
	123 is a value
	age is variable capable of storing numbered value
	int age is declaratiion
	age=123; is initialization


int a=10;
int b=a;
int c=10+20;
int d=10+c;

	
 *********** Declaration rules ***********
	Declaration line includes.... Data type followed by variable name
	variable cannot be assigned with a value before declaration a data type
	variable names : same program and same block
		u cannot have 2 similar variable names
		can contain alphabets, numbers, $, _
		start with alphabet or $ or _ 
		coding practice
			naming convention - camelCase
			choose a relevant meaningful names
	
	
******** initialization rules ****
	Value assigned to a variable for the FIRST time.
	values should match the data type on LHS
	RHS can be literal value OR variable of same type OR expression OR method call
	
Always process RHS and convert into a single value
equal sign RULES... 
1) LHS should always be a variable
2) RHS can have values , variable, expressions
	int a=10; // literal value
	
	when RHS has variable 
	int b=a; (replace value of RHS variable)
	int b=10; 
	
	when RHS is expression
	int c=10+20-10+44; (solve the expression)
	int c=64;
	
	int d=10+c; ( 1-replace all RHS variable value...  2-solve the expression)
	int d=10+64; 
	int d=74; 
	
	when RHS is method call.. replace the returned result from method call
	int result=cal.add(10,20);  
	int result=30;  


********* Accessing Data ********* 
	same program : direct access 
	outside program : accessed with reference to the program using dot operator



Methods :
	********* Method Declaration	*********
		how to recognize methods : Does-A exercise
		how to code methods :
			What to name this activity ??? <<NAME>>
			how many inputs are required ??? what are the data type of each inputs ???
			how many outputs are required ??? what is the data type of each output ???
		
		optional	mandatory	mandatory 	(optional) 
		PUBLIC 	OUTPUT 	NAME		(INPUT)
	
	
		NAME : similar rules as variables
			Follow camelCase format in method names
			Alphabets , numbers, $, _ allowed in method names
	
		OUTPUT : CAN ALWAYS BE 0 or 1 
			0 = void  ... 
				public  void hello(String message)
			1 = appropriate data type, int/boolean... 
				public int add(int a, int b)
			more than 1 = complex or multiple infor to return, create an object data type 
				public Profile display(String userid)
				
		INPUT : CAN ALWAYS BE 0 or MORE 
			0 = if no input require, leave it empty
				public int bye(  )
			More = if more than 1 input , separated by comma. data type followed by the name 
				public int add(int number1, int number2)

	********* Method Body - logic/ instructions ********* 
	
		LOGIC : use control flows and operators for logic.
		
		
		RETURN STATEMENT :
		
			if void output - no return required
			if anything but void - return required
				primitive data type - 
					literal value that matches output data type 
						or 
					variable that matches output data type 
				Object /complex data type
					variable that matches output data type 
					
					
						
						
						
						
how to recognize methods : Does-A exercise
		how to code methods :
			What to name this activity ??? <<NAME>>
			how many inputs are required ??? what are the data type of each inputs ???
			how many outputs are required ??? what is the data type of each output ???
		
		PUBLIC 	OUTPUT 	NAME	(INPUT) parenthesis

************************************
Variable -stores information


Global
	Static
	instance
Local
	parametric
	local
	
	
ToyotaCorolla
	customer1
		static brand name
		instance color
		instance vin = 12313
	customer2
		brand name
		color
		vin= 4545
		
ChaseBankAccount1		
	static BankName
	balanc
	acctNumber
ChaseBankAccount2		
	static BankName
	balanc
	acctNumber
		
		
		
		
AppleProduct
	has-a
		price
		description
		code
		 category="electronics"
		ecommerce
	
	tble - furnitutere
	chair - furnitutere
	laptop - electronics
	cellpphone - electronics
	
// AND : both should be satisfied	
true and true = true
true and false = false
false and true = false
false and false = false

// OR : choice = either one of them should be satisified
true or true = true
true or false = true 
false or true = true
false or false = false

// EX-OR : choice = either one of them should be satisified
true ex-or true = false
true ex-or false = true 
false ex-or true = true
false ex-or false = false


10 + 20 * 4 - 5 = 115 , 30

1) () 
2) * / 
3) + - 
4) relational operator > <
5) &&
6) ||
7) if u have multiple operator at the same level .. go left to right

boolean z=  10 + 20 * 4 - 5 +( 2+ 3) > 2 && (10 + 2) > 3;

10 + 20 * 4 - 5 +( 2+ 3) > 2 && (10 + 2) > 3
10 + 20 * 4 - 5 +5  > 2 && (10 + 2) > 3
10 + 20 * 4 - 5 +5  > 2 && 12 > 3
10 + 80 - 5 +5  > 2 && 12 > 3
90 - 5 +5  > 2 && 12 > 3
85 +5  > 2 && 12 > 3
90  > 2 && 12 > 3
true && 12 > 3
true && true
true



1 + 2 = 3
1 equal to 2 = false (equality operator)
1 greater than 2 = false(relational operator)

is 1 equal to 1 OR 1 is greater than 2 = true(conditional operator)
	TRUE	OR 		FALSE = TRUE
	
	
Loop

For : fixed loop
While : 0 or more loop
Do-While : 1 or more loop


Airline seat booking software - book each seats one by one
	fixed loop : fixed seats in a flight. cant go beyond fixed number.
browse and add item to Shopping cart
	While loop : 
atm - use atm software
	Do-While


for(	initialization ; condition check : modification ){
	repetitve task code
}
for(   int i=1;	i< 5	;	i++){
	sysout(" hi ");
}

I C R		:	i=1,	true,	print hi
M C R	:	i=2,	true,	print hi
M C R	:	i=3,	true,	print hi
M C R	:	i=4,	true,	print hi
M C R	:	i=5,	false
M C R
M C R

// INFINITE LOOP
for(   int i=1;	i > 0	;	i++){
	sysout(" hi ");
}

continue : Skip  current loop
	and "continue" with next loop
break:	emergency exit... stop entire loop...
// < > == != && ||
for(   int i=1;	i < 5	;	i++){
	sysout(" hi ");
		if(i==3)
			break;
	sysout(" bye");
}


I C R		:	i=1		true		print hi	print bye
M C R	:	i=2		true		print hi	print bye
M C R	:	i=3		true		print hi
M C R	:	


While Loop

while( condition check ){



}


Switch case is better than if-else-if in performance
	limitation : works only on primitive data type
	
complex conditions cannot be written in switch case
since it operates only on primitive data type value

if(userid==regUserid && pass=regPass)
	sysout(welcome);
else if(email==regemail && pass=regPass)
	sysout(welcome);
else if(phone==regphone && pass=regPass)
	sysout(welcome);
		
	
	




